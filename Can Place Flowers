class Solution {
    public boolean canPlaceFlowers(int[] flowerbed, int n) {
        if(n <= 0)
            return true;
        int len = flowerbed.length;
        if(len == 0 && n>0)
            return false;
        else if(len == 1)
        {
            if(n == 1 && flowerbed[0] == 0)
                return true;
            else
                return false;
        } 
        else if(len == 2)
        {
            if(n == 1 && (flowerbed[0] == 0 && flowerbed[1] == 0))
                return true;
            else
                return false;
        }
        else
        {
            for(int i=0; n>0 && i<len; i++)
            {
                if(i==0)
                {
                    if(flowerbed[0] == 0 && flowerbed[1] == 0)
                    {
                        flowerbed[0] = 1;
                        n--;    
                    }
                }
                else if(i == len -1)
                {
                    if(flowerbed[i] == 0 && flowerbed[i-1] == 0)
                    {
                        flowerbed[i] = 1;
                        n--;
                    }
                }
                else
                {
                    if(flowerbed[i-1] == 0 && flowerbed[i] == 0 && flowerbed[i+1] == 0)
                    {
                        flowerbed[i] = 1;
                        n--;
                    }
                }
                //print(flowerbed);
            }
        }
        if(n == 0)
            return true;
        else
            return false;
    }
    private void print(int[] x)
    {
        for(int i=0; i<x.length; i++)
            System.out.print(x[i]+" ");
        System.out.println();
    }
}
