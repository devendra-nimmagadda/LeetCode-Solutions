import java.math.BigInteger;
class Solution {
    public List<Integer> getRow(int rowIndex) {
        
       List<Integer> list = new ArrayList<>(rowIndex+1); 
        for(int i=0; i<rowIndex+1; i++)
        	list.add(0);
        for(int i=0; i<=rowIndex/2; i++) {
            if(i == 0) {
                list.set(0, 1);
                list.set(rowIndex, 1);               
            }
            else if(i == 1) {
                list.set(1, rowIndex);
                list.set(rowIndex-1, rowIndex);                
            } else {
                 BigInteger x = BigInteger.ONE;
                for(int x1=1; x1<=i;x1++)
                	x = x.multiply(new BigInteger(String.valueOf(rowIndex - (x1 - 1))));
                long y = 1;
                for(int y1 = i; y1 >1; y = y * y1,y1--);
                Integer r = Integer.valueOf(x.divide(new BigInteger(String.valueOf(y))).toString());
                list.set(i , r);
                list.set(rowIndex-i, r);                     
            }
        }
        return list;   
    }
}
