/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public static ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        ListNode list = null;
        if(l1 != null && l2 == null) {
            list = l1;
        } else if(l1 == null && l2 != null) {
            list = l2;
        } else {
            ListNode t1 = l1;
            ListNode t2 = l2;
            ListNode last = list;
            while(t1 != null && t2 != null) {
                if(t1.val < t2.val) {
                    ListNode l = new ListNode(t1.val);
                    if(last != null)
                        last.next = l;
                    else
                        list = l;
                    last = l;                    
                    t1 = t1.next;                    
                } else if(t1.val > t2.val) {
                    ListNode l = new ListNode(t2.val);
                    if(last != null)
                        last.next = l;
                    else
                        list = l;
                    last = l;                    
                    t2 = t2.next;
                } else {
                    ListNode l = new ListNode(t2.val);
                    if(last != null) {
                        last.next = l;                        
                    } 
                    else
                        list = l;
                    last = l;
                    ListNode lt2 = new ListNode(t2.val);
                    last.next = lt2;
                    last = lt2; 
                    
                    t1 = t1.next;
                    t2 = t2.next;
                }
                if(list == null)
                    list = last;
            }
            while(t1 != null) {
                ListNode l = new ListNode(t1.val);
                if(last != null)
                    last.next = l;
                else
                    list = l;
                last = l;                    
                t1 = t1.next;  
                if(list == null)
                    list = last;
            }
            
            while(t2 != null) {
                ListNode l = new ListNode(t2.val);
                if(last != null)
                    last.next = l;
                else
                    list = l;
                last = l;                    
                t2 = t2.next;  
                if(list == null)
                    list = last;
            }
            
        }
            return list;
    }
}
