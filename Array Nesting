class Solution {
    public int arrayNesting(int[] nums) {
        Map<String, Integer> map = new HashMap<>();
        int max = 0;
        for(int i=0; i<nums.length; i++)
        {
            int prev = nums[i];
            if(isValid(map, prev))
            {
                //System.out.println("already done..."+prev);
                continue;
            }
            int t = prev;
            StringBuilder str = new StringBuilder();
            int next = -1;
            int count = 0;
            while(prev != next)
            {
                str.append(t).append(",");
                next = nums[t];                
                if(prev == next)
                {
                    count++;
                    map.put(str.toString(), count);
                    if(max < count)
                        max = count;
                }
                else
                {
                    t = next;
                    count++;
                }
            }
            //System.out.println(map);
        }
        return max;
    }
    private boolean isValid(Map<String, Integer> map, int val)
    {
        return map.keySet().stream().anyMatch(x -> x.indexOf(String.valueOf(val)) > 0);  
    }
}
