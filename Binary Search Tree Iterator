/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class BSTIterator {
    List<Integer> list = new ArrayList<>();
    public BSTIterator(TreeNode root) {
        inorder(root, list);
    }
    
    /** @return the next smallest number */
    public int next() {
        return list.remove(0);
    }
    
    /** @return whether we have a next smallest number */
    public boolean hasNext() {
        return list.size() > 0;
    }
    
    private void inorder(TreeNode node, List<Integer> list)
    {
        if(node != null)
        {
            inorder(node.left, list);
            list.add(node.val);
            inorder(node.right, list);
        }
    }
}

/**
 * Your BSTIterator object will be instantiated and called as such:
 * BSTIterator obj = new BSTIterator(root);
 * int param_1 = obj.next();
 * boolean param_2 = obj.hasNext();
 */
