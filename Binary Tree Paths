/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<String> binaryTreePaths(TreeNode root) {        
        List<String> paths = new ArrayList<>();
        if(root == null)
            return paths;
        String path = null;
        findPaths(root, paths, path);   
        return paths;
    }
    void findPaths(TreeNode node, List<String> paths, String path)
    {    
        if(node == null)
            return;
        if(path == null)
        {
            path = String.valueOf(node.val);
        }
        else
        {
            path += "->"+String.valueOf(node.val);
        }
        if(node.left == null && node.right == null)
        {
            paths.add(path);
            return;
        }        
        findPaths(node.left, paths, path);
        findPaths(node.right, paths, path);
    }
}
